@use 'sanitize.css';

@use '$styles/globals' as *;

@include apply();

@view-transition {
  navigation: auto;
}

/* ibm-plex-mono-latin-400-normal */
@font-face {
  font-family: 'IBM Plex Mono';
  font-style: normal;
  font-display: swap;
  font-weight: 400;
  src:
    url(@fontsource/ibm-plex-mono/files/ibm-plex-mono-latin-400-normal.woff2) format('woff2'),
    url(@fontsource/ibm-plex-mono/files/ibm-plex-mono-latin-400-normal.woff) format('woff');
  unicode-range:
    U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC,
    U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

html[data-theme='janis-light'] {
  code,
  .astro-code,
  .astro-code span,
  .astro-code .line {
    background-color: themed('gray-3') !important;
  }
}

html[data-theme='janis-dark'] {
  code,
  .astro-code,
  .astro-code span,
  .astro-code .line {
    background-color: themed('gray-3') !important;
    color: var(--shiki-dark) !important;
  }
}

html[data-theme='lucie-light'] {
  code,
  .astro-code,
  .astro-code span,
  .astro-code .line {
    background-color: themed('gray-5') !important;
  }
}

html[data-theme='lucie-dark'] {
  code,
  .astro-code,
  .astro-code span,
  .astro-code .line {
    color: var(--shiki-dark) !important;
    background-color: themed('gray-3') !important;
  }
}

code {
  border: 1px dashed themed('gray-8');
  padding: themed('size-2') themed('size-4');
}

.astro-code {
  $header-size: themed('size-32');

  padding-top: $header-size;
  position: relative;
  overflow: hidden;

  &:before {
    top: 0;
    position: absolute;

    display: flex;
    align-items: center;
    padding: 0 themed('size-8');
    text-transform: uppercase;
    border: 1px dashed themed('gray-8');
    border-bottom: none;
    font-size: 0.8em;

    height: $header-size;
    width: 100%;
    background-color: themed('gray-4');
    content: attr(data-language);
  }

  code {
    display: inline-grid;
    grid-auto-rows: 25px;
    padding: 0 !important;
    width: 100%;
    overflow: auto;

    .line {
      display: inline-block;
      width: 100%;
      padding: themed('size-1') themed('size-8');
    }

    $highlighted-border: 1px dashed themed('gray-8');

    &:has(.highlighted) {
      .line.highlighted,
      .line.highlighted span {
        background-color: themed('gray-4') !important;
      }

      .line:not(.highlighted) {
        filter: blur(1px);
      }

      // The first highlighted line, if there is no previous line
      .highlighted:first-of-type {
        border-top: $highlighted-border;
      }

      // Select the first highlighted line that comes after a non-highlighted line
      .line:not(.highlighted):has(+ .highlighted) + .highlighted {
        border-top: $highlighted-border;
      }

      // highlighted lines that are not followed by another highlighted line
      .highlighted:not(:has(+ .highlighted)) {
        border-bottom: $highlighted-border;
      }
    }
  }
}

html {
  font-size: 16px;
  scrollbar-color: themed('text') themed('background');

  ::selection {
    background: themed('text');
    color: themed('background');
  }
}

html,
body {
  margin: 0;
  width: 100vw;
  height: 100vh;
}

body {
  font-family: 'IBM Plex Mono', Tahoma, Geneva, Verdana, sans-serif;
  color: themed('text');

  $line-color: themed('gray-3');
  $background-color: themed('background');

  background-color: $background-color;
  background-image:
    linear-gradient($line-color 2px, transparent 2px), linear-gradient(90deg, $line-color 2px, transparent 2px),
    linear-gradient($line-color 1px, transparent 1px), linear-gradient(90deg, $line-color 1px, $background-color 1px);
  background-size:
    50px 50px,
    50px 50px,
    10px 10px,
    10px 10px;
  background-position:
    -2px -2px,
    -2px -2px,
    -1px -1px,
    -1px -1px;
  background-repeat: repeat;

  @include media('<=tablet') {
    grid-template-rows: themed('size-64') auto;
  }
}

body:not(:has(.container--raw)) {
  overflow: hidden;
  display: grid;
  grid-template-rows: themed('size-64') auto;
}

body:has(.container--raw) {
  margin: 0;
}

p {
  text-wrap: pretty;
}

a {
  cursor: pointer;
  color: themed('text');
  text-decoration: underline;
  text-decoration-style: dashed;
  text-underline-offset: themed('size-4');

  &:has(svg, h1, h2, h3, h4, h5, h6) {
    text-decoration: none;
  }
}

ul {
  list-style-type: square;
  padding-left: themed('size-24');
}

// We're not adding font-awesome styles, so we need to style icons manually
svg {
  width: 1em;
  height: 1em;
}

.blog:has(img) img {
  width: 100%;
  object-fit: contain;
  height: min-content;
  margin-top: themed('size-16');
}

.strikethrough {
  background: linear-gradient(to left top, transparent 47.75%, currentColor 48%, currentColor 52%, transparent 52.25%);
}

@include media('<desktop') {
  ul {
    padding-left: themed('size-16');
  }
}

@include media('<=tablet') {
  html {
    font-size: 14px;
  }
}

@include media('<=phone') {
  html {
    font-size: 12px;
  }
}
